"use strict";

const socket = io.connect('ws://127.0.0.1:5014', { 'sync disconnect on unload': true, secure: true });
let user_id;

$(document).ready(function() {
	user_id = $('#user_id').val();
});

// update user channel active
socket.on('connect', () => {
	socket.emit('new-user-connected');
  	update_user_state( user_id, 1 );
	get_online_users();
});

$(document).on('click', '.show-chat', function(event) {
	event.preventDefault();
	
	$(document).find('.show-chat').removeClass('active')
	$(this).addClass('active');

	let id = $(this).attr('data-xid');
	if ( id ) {
		$.ajax({
			url: SHOW_USER_CHAT,
			type: 'post',
			dataType: 'json',
			async: false,
			cache: false,
			data: {
				id: id,
			},
			complete: response => {
				let resp = response.responseJSON;
				if ( resp ) {
					if ( resp.status ) {
						$('#chat-screen').html(resp.data.view);
						$('#chat-history-wrapper').scrollTop($('#chat-history-wrapper')[0].scrollHeight);
					} else {
						//
					}
				}
			},
			error: error => {

			},
		});	
	}
});

$(document).on('keyup', '#message', function() {
	if ( $.trim($(this).val()).length ) {
		$('#btn-send-message').removeClass('pointer-events-none opacity-60');
	} else {
		$('#btn-send-message').addClass('pointer-events-none opacity-60');
	}
});

// Receive chat code
socket.on('receiver-broadcast-message', ( payload ) => {
	if ( Object.keys(payload).length ) {
		let receiver_id = $('#receiver_id').val();
		console.log('payload', payload, 'receiver_id', receiver_id, payload.receiver_id, user_id, payload.receiver_id == user_id)
		if ( payload.receiver_id == user_id && payload.sender_id == receiver_id ) {
			console.log('receiver-broadcast-message', payload, SHOW_RECEIVER_MESSAGE)
			$.ajax({
				url: SHOW_RECEIVER_MESSAGE,
				type: 'post',
				dataType: 'json',
				data: payload,
				async: false,
				cache: false,
				complete: response => {
					let resp = response.responseJSON;
					if ( resp ) {
						if ( resp.status ) {
							removeGreetingMessage();
							$(document).find('#chat-history-wrapper').append( resp.data.view );
							$("#chat-history-wrapper").animate({ scrollTop: $('#chat-history-wrapper').prop("scrollHeight")}, 1000);
						}
					}
				},
				error: error => {

				},
			});
			
		} else {
			console.log('call else')
		}
	}
});

// Send chat code
$(document).on('click', '#btn-send-message', function(event) {
	event.preventDefault();
	let message = $('#message').val();
	let receiver_id = $('#receiver_id').val();

	if ( message.length ) {
		let payload = {
			sender_id: user_id,
			receiver_id: receiver_id,
			message: message,
		};

		$.ajax({
			url: STORE_MESSAGES,
			type: 'post',
			dataType: 'json',
			data: payload,
			async: false,
			cache: false,
			complete: response => {
				let resp = response.responseJSON;
				if ( resp ) {
					if ( resp.status ) {
						payload['message_id'] = resp.data.message;
						socket.emit('sender-send-message', payload);

						removeGreetingMessage();
						
						$(document).find('#chat-history-wrapper').append( resp.data.view );
						$('#message').val('')

						$("#chat-history-wrapper").animate({ scrollTop: $('#chat-history-wrapper').prop("scrollHeight")}, 1000);
					}
				}
			},
			error: error => {},
		});	
	}
});

// close chat window
$(document).on('click', '.close-chat', function(event) {
	event.preventDefault();
	$.ajax({
		url: RESET_CHAT_SCREEN,
		type: 'get',
		dataType: 'json',
		cache: false,
		async: false,
		complete: response => {
			let resp = response.responseJSON;
			if ( resp ) {
				if ( resp.status ) {
					$('#chat-screen').html(resp.data.view);
				}
			}
		},
		error: error => {},
	});
	
});